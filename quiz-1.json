[
  {
    "번호": 1,
    "문제": "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?",
    "선택지": {
      "①": "Coad와 Yourdon 방법",
      "②": "Booch 방법",
      "③": "Jacobson 방법",
      "④": "Wirfs-Brock 방법"
    },
    "정답": "①"
  },
  {
    "번호": 2,
    "문제": "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?",
    "선택지": {
      "①": "RPC",
      "②": "ORB",
      "③": "TP monitor",
      "④": "HUB"
    },
    "정답": "③"
  },
  {
    "번호": 3,
    "문제": "자료 흐름도(Data Flow Diagram)의 구성 요소로 옳은 것은?",
    "선택지": {
      "①": "process, data flow, data store, comment",
      "②": "process, data flow, data store, terminator",
      "③": "data flow, data store, terminator, data dictionary",
      "④": "process, data store, terminator, mini-spec"
    },
    "정답": "②"
  },
  {
    "번호": 4,
    "문제": "객체지향에서 정보 은닉과 가장 밀접한 관계가 있는 것은?",
    "선택지": {
      "①": "Encapsulation",
      "②": "Class",
      "③": "Method",
      "④": "Instance"
    },
    "정답": "①"
  },
  {
    "번호": 5,
    "문제": "다음 중 자료 사전(Data Dictionary)에서 선택의 의미를 나타내는 것은?",
    "선택지": {
      "①": "[ ]",
      "②": "{ }",
      "③": "＋",
      "④": "＝"
    },
    "정답": "①"
  },
  {
    "번호": 6,
    "문제": "소프트웨어 개발 단계에서 요구 분석 과정에 대한 설명으로 거리가 먼 것은?",
    "선택지": {
      "①": "분석 결과의 문서화를 통해 향후 유지보수에 유용하게 활용할 수 있다.",
      "②": "개발 비용이 가장 많이 소요되는 단계이다.",
      "③": "자료흐름도와 자료 사전 등이 효과적으로 이용될 수 있다.",
      "④": "보다 구체적인 명세를 위해 소단위 명세서(Mini-Spec)가 활용될 수 있다."
    },
    "정답": "②"
  },
  {
    "번호": 7,
    "문제": "럼바우(Rumbaugh) 분석 기법에서 정보 모델링이라고도 하며 시스템에서 요구되는 객체를 찾아내어 속성과 연산을 식별하고 객체들 간의 관계를 규정하여 다이어그램을 표시하는 모델링은?",
    "선택지": {
      "①": "Object",
      "②": "Dynamic",
      "③": "Function",
      "④": "Static"
    },
    "정답": "①"
  },
  {
    "번호": 8,
    "문제": "UML(Unified Modeling Language)에 대한 설명 중 틀린 것은?",
    "선택지": {
      "①": "기능적 모델은 사용자 측면에서 본 시스템 기능이며, UML에서는 Use case Diagram을 사용한다.",
      "②": "정적 모델은 객체 속성, 연관관계, 오퍼레이션의 시스템의 구조를 나타내며, UML에서는 Class Diagram을 사용한다.",
      "③": "동적 모델은 시스템의 내부 동작을 말하며, UML에서는 Sequence Diagram, State Diagram, Activity Diagram을 사용한다.",
      "④": "State Diagram은 객체들 사이의 메시지 교환을 나타내며, Sequence Diagram은 하나의 객체가 가진 상태와 그 상태의 변화에 의한 동작순서를 나타낸다."
    },
    "정답": "④"
  },
  {
    "번호": 9,
    "문제": "사용자 인터페이스(UI)의 특징으로 틀린 것은?",
    "선택지": {
      "①": "구현하고자 하는 결과의 오류를 최소화한다.",
      "②": "사용자의 편의성을 높임으로써 작업시간을 증가시킨다.",
      "③": "막연한 작업 기능에 대해 구체적인 방법을 제시하여 준다.",
      "④": "사용자 중심의 상호 작용이 되도록 한다."
    },
    "정답": "②"
  },
  {
    "번호": 10,
    "문제": "디자인 패턴에 대한 설명으로 틀린 것은?",
    "선택지": {
      "①": "Factory Method Pattern은 상위클래스에서 객체를 생성하는 인터페이스를 정의하고, 하위클래스에서 인스턴스를 생성하도록 하는 방식이다.",
      "②": "Prototype Pattern은 Prototype을 먼저 생성하고 인스턴스를 복제하여 사용하는 구조이다.",
      "③": "Bridge Pattern은 기존에 구현되어 있는 클래스에 기능을 발생시 기존 클래스를 재사용할 수 있도록 중간에서 맞춰주는 역할을 한다.",
      "④": "Mediator Pattern은 객체 간의 통제와 지시의 역할을 하는 중재자를 두어 객체지향의 목표를 달성하게 해준다."
    },
    "정답": "③"
  },
  {
    "번호": 11,
    "문제": "익스트림 프로그래밍(XP)에 대한 설명으로 틀린 것은?",
    "선택지": {
      "①": "빠른 개발을 위해 테스트를 수행하지 않는다.",
      "②": "사용자의 요구사항은 언제든지 변할 수 있다.",
      "③": "고객과 직접 대면하며 요구사항을 이야기하기 위해 사용자 스토리(User Story)를 활용할 수 있다.",
      "④": "기존의 방법론에 비해 실용성을 강조한 것이라고 볼 수 있다."
    },
    "정답": "①"
  },
  {
    "번호": 12,
    "문제": "대표적으로 DOS 및 Unix 등의 운영체제에서 조작을 위해 사용하던 것으로, 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스(User Interface)는?",
    "선택지": {
      "①": "GUI(Graphical User Interface)",
      "②": "CLI(Command Line Interface)",
      "③": "CUI(Cell User Interface)",
      "④": "MUI(Mobile User Interface)"
    },
    "정답": "②"
  },
  {
    "번호": 13,
    "문제": "다이어그램 중 정적 다이어그램이 아닌 것은?",
    "선택지": {
      "①": "컴포넌트 다이어그램",
      "②": "배치 다이어그램",
      "③": "순차 다이어그램",
      "④": "패키지 다이어그램"
    },
    "정답": "③"
  },
  {
    "번호": 14,
    "문제": "다음 내용이 설명하는 설계 도구는? \n- 디자인, 사용 방법 설명, 평가 등을 위해 실제 화면과 유사하게 만든 정적인 형태의 모형\n- 시각적으로만 구성 요소를 배치하는 것으로, 일반적으로 실제로 구현되지는 않음",
    "선택지": {
      "①": "스토리보드(Storyboard)",
      "②": "목업(Mockup)",
      "③": "프로토타입(Prototype)",
      "④": "유스케이스(Usecase)"
    },
    "정답": "②"
  },
  {
    "번호": 15,
    "문제": "요구사항 분석에서 비기능적 요구(Nonfunctional)에 대한 설명으로 옳은 것은?",
    "선택지": {
      "①": "시스템의 처리량, 반응 시간 등의 성능 요구나 품질 요구는 비기능적 요구에 해당하지 않는다.",
      "②": "차량 대여 시스템이 제공하는 모든 화면이 '3초 이내'에 사용자에게 보여야 한다는 것은 비기능적 요구이다.",
      "③": "시스템 구축과 관련된 안전, 보안에 대한 요구사항들은 비기능적 요구에 해당하지 않는다.",
      "④": "금융 시스템은 조회, 인출, 입금, 송금의 기능이 있어야 한다는 것은 비기능적 요구이다."
    },
    "정답": "②"
  },
  {
    "번호": 16,
    "문제": "명백한 역할을 가지고 독립적으로 존재할 수 있는 시스템의 부분으로, 넓은 의미에서는 재사용되는 모든 단위라고 볼 수 있으며, 인터페이스를 통해서만 접근할 수 있는 것은?",
    "선택지": {
      "①": "Model",
      "②": "Sheet",
      "③": "Component",
      "④": "Cell"
    },
    "정답": "③"
  },
  {
    "번호": 17,
    "문제": "다음 중 SOLID 원칙이라고 불리는 객체지향 설계 원칙에 속하지 않는 것은?",
    "선택지": {
      "①": "ISP(Interface Segregation Principle)",
      "②": "DIP(Dependency Inversion Principle)",
      "③": "LSP(Liskov Substitution Principle)",
      "④": "SSO(Single Sign On)"
    },
    "정답": "④"
  },
  {
    "번호": 18,
    "문제": "UML 확장 모델에서 스테레오 타입 객체를 표현할 때 사용하는 기호로 맞는 것은?",
    "선택지": {
      "①": "<< >>",
      "②": "(( ))",
      "③": "{{ }}",
      "④": "[[ ]]"
    },
    "정답": "①"
  },
  {
    "번호": 19,
    "문제": "CASE(Computer-Aided Software Engineering)의 원천 기술이 아닌 것은?",
    "선택지": {
      "①": "구조적 기법",
      "②": "프로토타이핑 기술",
      "③": "정보 저장소 기술",
      "④": "일괄처리 기술"
    },
    "정답": "④"
  },
  {
    "번호": 20,
    "문제": "다음 중 상태 다이어그램에서 객체 전이의 요인이 되는 요소는?",
    "선택지": {
      "①": "event",
      "②": "state",
      "③": "message",
      "④": "transition"
    },
    "정답": "①"
  },
  {
    "번호": 21,
    "문제": "EAI(Enterprise Application Integration)의 구축 유형으로 옳지 않은 것은?",
    "선택지": {
      "①": "Point-to-Point",
      "②": "Hub & Spoke",
      "③": "Message Bus",
      "④": "Tree"
    },
    "정답": "④"
  },
  {
    "번호": 22,
    "문제": "검증 검사 기법 중 개발자의 장소에서 사용자가 개발자 앞에서 행하는 기법이며, 일반적으로 통제된 환경에서 사용자와 개발자가 함께 확인하면서 수행되는 검사는?",
    "선택지": {
      "①": "동치 분할 검사",
      "②": "형상 검사",
      "③": "알파 검사",
      "④": "베타 검사"
    },
    "정답": "③"
  },
  {
    "번호": 23,
    "문제": "다음 트리의 차수(degree)는?",
    "선택지": {
      "①": "2",
      "②": "3",
      "③": "4",
      "④": "5"
    },
    "정답": "②"
  },
  {
    "번호": 24,
    "문제": "인터페이스 구현 시 사용하는 기술 중 다음 내용이 설명하는 것은?\n- JavaScript를 사용한 비동기 통신 기술로 클라이언트와 서버 간에 데이터를 주고받는 기술",
    "선택지": {
      "①": "Procedure",
      "②": "Trigger",
      "③": "Greedy",
      "④": "AJAX"
    },
    "정답": "④"
  },
  {
    "번호": 25,
    "문제": "해싱 함수 중 레코드 키를 여러 부분으로 나누고, 나눈 부분의 각 숫자를 더하거나 XOR한 값을 홈 주소로 사용하는 방식은?",
    "선택지": {
      "①": "제산법",
      "②": "폴딩법",
      "③": "기수 변환법",
      "④": "숫자 분석법"
    },
    "정답": "②"
  },
  {
    "번호": 26,
    "문제": "다음 자료를 선택 정렬(Selection Sort)을 이용하여 오름차순으로 정렬하고자 한다. 3회전 후의 결과로 옳은 것은?\n자료: 37, 14, 17, 40, 35",
    "선택지": {
      "①": "14, 17, 37, 40, 35",
      "②": "14, 37, 17, 40, 35",
      "③": "17, 14, 37, 35, 40",
      "④": "14, 17, 35, 40, 37"
    },
    "정답": "④"
  },
  {
    "번호": 27,
    "문제": "소스 코드 품질 분석 도구 중 정적 분석 도구가 아닌 것은?",
    "선택지": {
      "①": "pmd",
      "②": "checkstyle",
      "③": "valance",
      "④": "cppcheck"
    },
    "정답": "③"
  },
  {
    "번호": 28,
    "문제": "다음 트리에 대한 중위 순회(Inorder Traversal) 결과는?",
    "선택지": {
      "①": "ABDCEF",
      "②": "ABCDEF",
      "③": "DBECFA",
      "④": "DBAECF"
    },
    "정답": "④"
  },
  {
    "번호": 29,
    "문제": "소프트웨어 테스트와 관련한 설명으로 틀린 것은?",
    "선택지": {
      "①": "화이트박스 테스트는 모듈의 논리적인 구조를 체계적으로 점검할 수 있다.",
      "②": "블랙박스 테스트는 프로그램의 구조를 고려하지 않는다.",
      "③": "테스트 케이스에는 일반적으로 시험 조건, 테스트 데이터, 예상 결과가 포함되어야 한다.",
      "④": "화이트박스 테스트에서 기본 경로(Basis Path)란 흐름 그래프의 시작 노드에서 종료 노드까지의 서로 독립된 경로로 사이클을 허용하지 않는 경로를 말한다."
    },
    "정답": "④"
  },
  {
    "번호": 30,
    "문제": "소프트웨어 형상 관리에 대한 설명으로 거리가 먼 것은?",
    "선택지": {
      "①": "소프트웨어에 가해지는 변경을 제어하고 관리한다.",
      "②": "프로젝트 계획서, 분석서, 설계서, 프로그램, 테스트 케이스 모두 관리 대상이다.",
      "③": "대표적인 형상 관리 도구로 Ant, Maven, Gradle 등이 있다.",
      "④": "유지 보수 단계뿐만 아니라 개발 단계에도 적용할 수 있다."
    },
    "정답": "③"
  },
  {
    "번호": 31,
    "문제": "다음 중 최악의 경우 검색 효율이 가장 나쁜 트리 구조는?",
    "선택지": {
      "①": "이진 탐색 트리",
      "②": "AVL 트리",
      "③": "2-3 트리",
      "④": "레드-블랙 트리"
    },
    "정답": "①"
  },
  {
    "번호": 32,
    "문제": "다음 중 선형 구조로만 묶인 것은?",
    "선택지": {
      "①": "스택, 트리",
      "②": "큐, 데크",
      "③": "큐, 그래프",
      "④": "리스트, 그래프"
    },
    "정답": "②"
  },
  {
    "번호": 33,
    "문제": "화이트박스 검사 기법에 해당하는 것으로만 짝지어진 것은?",
    "선택지": {
      "①": "데이터 흐름 검사, 루프 검사",
      "②": "데이터 흐름 검사, 경계값 분석",
      "③": "루프 검사, 원인-결과 그래프 기법",
      "④": "동등 분할 검사, 오류예측 기법"
    },
    "정답": "①"
  },
  {
    "번호": 34,
    "문제": "단위 테스트에서 테스트의 대상이 되는 하위 모듈을 호출하고 파라미터를 전달하는 가상의 모듈로 상향식 테스트에 필요한 것은?",
    "선택지": {
      "①": "테스트 스텁(Test Stub)",
      "②": "테스트 드라이버(Test Driver)",
      "③": "테스트 슈트(Test Suites)",
      "④": "테스트 케이스(Test Case)"
    },
    "정답": "②"
  },
  {
    "번호": 35,
    "문제": "인터페이스 구현 시 사용하는 기술로 속성 값 쌍(Attribute-Value Pairs)으로 이루어진 데이터 오브젝트를 전달하기 위해 사용하는 개방형 표준 포맷은?",
    "선택지": {
      "①": "JSON",
      "②": "HTML",
      "③": "AVPN",
      "④": "DOF"
    },
    "정답": "①"
  },
  {
    "번호": 36,
    "문제": "DRM(Digital Rights Management)에 대한 설명으로 틀린 것은?",
    "선택지": {
      "①": "디지털 콘텐츠와 디바이스의 사용을 제한하기 위해 하드웨어 제조업자, 저작권자, 출판업자 등이 사용할 수 있는 접근 제어 기술을 의미한다.",
      "②": "디지털 미디어의 생명 주기 동안 발생하는 사용 권한 관리, 과금, 유통 단계를 관리하는 기술로도 볼 수 있다.",
      "③": "클리어링 하우스(Clearing House)는 사용자에게 콘텐츠 라이선스를 발급하고 권한을 부여해주는 시스템을 말한다.",
      "④": "원본을 안전하게 유통하기 위한 전자적 보안은 고려하지 않기 때문에 불법 유통과 복제의 방지는 불가능하다."
    },
    "정답": "④"
  },
  {
    "번호": 37,
    "문제": "다음 중 테스트 오라클에 대한 설명으로 옳지 않은 것은?",
    "선택지": {
      "①": "샘플링 오라클: 특정한 몇몇 테스트 케이스의 입력 값들에 대해서만 기대하는 결과를 제공하는 오라클이다.",
      "②": "토탈 오라클: 모든 테스트 케이스의 입력 값에 대해 기대하는 결과를 제공하는 오라클이다.",
      "③": "휴리스틱 오라클: 특정 테스트 케이스의 입력 값에 대해 기대하는 결과를 제공하고, 나머지 입력 값들에 대해서는 추정으로 처리하는 오라클이다.",
      "④": "일관성 검사 오라클: 애플리케이션의 변경이 있을 경우 테스트 케이스의 수행 전과 후의 결과 값이 동일한지를 확인하는 오라클이다."
    },
    "정답": "②"
  },
  {
    "번호": 38,
    "문제": "인터페이스 구현 검증 도구가 아닌 것은?",
    "선택지": {
      "①": "ESB",
      "②": "xUnit",
      "③": "STAF",
      "④": "NTAF"
    },
    "정답": "①"
  },
  {
    "번호": 39,
    "문제": "정점이 5개인 방향 그래프가 가질 수 있는 최대 간선 수는? (단, 자기 간선과 중복 간선은 배제한다.)",
    "선택지": {
      "①": "7개",
      "②": "10개",
      "③": "20개",
      "④": "27개"
    },
    "정답": "③"
  },
  {
    "번호": 40,
    "문제": "물리데이터 저장소의 파티션 설계에서 파티션 유형으로 옳지 않은 것은?",
    "선택지": {
      "①": "범위 분할(Range Partitioning)",
      "②": "해시 분할(Hash Partitioning)",
      "③": "조합 분할(Composite Partitioning)",
      "④": "유닛 분할(Unit Partitioning)"
    },
    "정답": "④"
  },
  {
    "번호": 41,
    "문제": "참조 무결성을 유지하기 위하여 DROP 문에서 부모 테이블의 항목 값을 삭제할 경우 자동적으로 자식 테이블의 해당 레코드를 삭제하기 위한 옵션은?",
    "선택지": {
      "①": "CLUSTER",
      "②": "CASCADE",
      "③": "SET-NULL",
      "④": "RESTRICTED"
    },
    "정답": "②"
  },
  {
    "번호": 42,
    "문제": "뷰(View)에 대한 설명으로 옳지 않은 것은?",
    "선택지": {
      "①": "뷰는 CREATE 문을 사용하여 정의한다.",
      "②": "뷰는 데이터의 논리적 독립성을 제공한다.",
      "③": "뷰를 제거할 때에는 DROP 문을 사용한다.",
      "④": "뷰는 저장장치 내에 물리적으로 존재한다."
    },
    "정답": "④"
  },
  {
    "번호": 43,
    "문제": "다음 중 DML(Data Manipulation Language) SQL 명령어로만 나열된 것은?",
    "선택지": {
      "①": "DELETE, UPDATE, CREATE, ALTER",
      "②": "INSERT, DELETE, UPDATE, DROP",
      "③": "SELECT, INSERT, DELETE, UPDATE",
      "④": "SELECT, INSERT, DELETE, ALTER"
    },
    "정답": "③"
  },
  {
    "번호": 44,
    "문제": "관계대수의 순수 관계 연산자가 아닌 것은?",
    "선택지": {
      "①": "Select",
      "②": "Cartesian Product",
      "③": "Division",
      "④": "Project"
    },
    "정답": "②"
  },
  {
    "번호": 45,
    "문제": "관계 데이터 모델의 무결성 제약 중 기본키 값의 속성 값이 Null 값이 아닌 원자 값을 갖는 성질은?",
    "선택지": {
      "①": "개체 무결성",
      "②": "참조 무결성",
      "③": "도메인 무결성",
      "④": "튜플의 유일성"
    },
    "정답": "①"
  },
  {
    "번호": 46,
    "문제": "제3 정규형에서 보이스코드 정규형(BCNF)으로 정규화하기 위한 작업은?",
    "선택지": {
      "①": "원자 값이 아닌 도메인을 분해",
      "②": "부분 함수 종속 제거",
      "③": "이행 함수 종속 제거",
      "④": "결정자가 후보키가 아닌 함수 종속 제거"
    },
    "정답": "④"
  },
  {
    "번호": 47,
    "문제": "로킹(Locking) 기법에 대한 설명으로 틀린 것은?",
    "선택지": {
      "①": "로킹의 대상이 되는 객체의 크기를 로킹 단위라고 한다.",
      "②": "로킹 단위가 작아지면 병행성 수준이 낮아진다.",
      "③": "데이터베이스도 로킹 단위가 될 수 있다.",
      "④": "로킹 단위가 커지면 로크 수가 작아 로킹 오버헤드가 감소한다."
    },
    "정답": "②"
  },
  {
    "번호": 48,
    "문제": "다음 SQL 문에서 빈칸에 들어갈 내용으로 옳은 것은?\n\nUPDATE 회원\n(    ) 전화번호 = '010-14'\nWHERE 회원번호 = 'N4';",
    "선택지": {
      "①": "FROM",
      "②": "SET",
      "③": "INTO",
      "④": "TO"
    },
    "정답": "②"
  },
  {
    "번호": 49,
    "문제": "다음에서 설명하는 스키마(Schema)는?\n\n- 데이터베이스 전체를 정의한 것으로 데이터 개체, 관계, 제약조건, 접근권한, 무결성 규칙 등을 명세한 것",
    "선택지": {
      "①": "개념 스키마",
      "②": "내부 스키마",
      "③": "외부 스키마",
      "④": "내용 스키마"
    },
    "정답": "①"
  },
  {
    "번호": 50,
    "문제": "시스템 카탈로그에 대한 설명으로 틀린 것은?",
    "선택지": {
      "①": "시스템 카탈로그의 갱신은 무결성 유지를 위하여 SQL을 이용하여 사용자가 직접 갱신하여야 한다.",
      "②": "데이터베이스에 포함되는 데이터 객체에 대한 정의나 명세에 대한 정보를 유지·관리한다.",
      "③": "DBMS가 스스로 생성하고 유지하는 데이터베이스 내의 특별한 테이블의 집합체이다.",
      "④": "카탈로그에 저장된 정보를 메타 데이터라고도 한다."
    },
    "정답": "①"
  },
  {
    "번호": 51,
    "문제": "다음 릴레이션의 카디널리티(Cardinality)와 차수(Degree)가 올바르게 나타난 것은?\n\n| 아이디   | 성명  | 나이 | 등급 | 적립금 | 가입년도 |\n|----------|------|----|----|------|------|\n| yuyu01  | 원유철 | 36 | 3  | 2000 | 2008 |\n| sykim10 | 김성일 | 29 | 2  | 3300 | 2014 |\n| kshan4  | 한경선 | 45 | 3  | 2800 | 2009 |\n| namsu52 | 이남수 | 33 | 5  | 1000 | 2016 |",
    "선택지": {
      "①": "카디널리티: 4, 차수: 4",
      "②": "카디널리티: 4, 차수: 6",
      "③": "카디널리티: 6, 차수: 4",
      "④": "카디널리티: 6, 차수: 6"
    },
    "정답": "②"
  },
  {
    "번호": 52,
    "문제": "병행제어 기법의 종류가 아닌 것은?",
    "선택지": {
      "①": "로킹 기법",
      "②": "시분할 기법",
      "③": "타임 스탬프 기법",
      "④": "다중 버전 기법"
    },
    "정답": "②"
  },
  {
    "번호": 53,
    "문제": "데이터 속성 간의 종속성에 대한 엄밀한 고려 없이 잘못 설계된 데이터베이스에서는 데이터 처리 연산 수행 시 각종 이상 현상이 발생할 수 있다. 이러한 이상 현상이 아닌 것은?",
    "선택지": {
      "①": "검색 이상",
      "②": "삽입 이상",
      "③": "삭제 이상",
      "④": "갱신 이상"
    },
    "정답": "①"
  },
  {
    "번호": 54,
    "문제": "트랜잭션의 주요 특성 중 하나로, 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음을 의미하는 것은?",
    "선택지": {
      "①": "Log",
      "②": "Consistency",
      "③": "Isolation",
      "④": "Durability"
    },
    "정답": "③"
  },
  {
    "번호": 55,
    "문제": "관계형 데이터베이스에서 다음 설명에 해당하는 키는?\n\n- 한 릴레이션 내의 속성들의 집합으로 구성된 키로서 릴레이션을 구성하는 모든 튜플에 대한 유일성은 만족시키지만 최소성은 만족시키지 못한다.",
    "선택지": {
      "①": "후보키",
      "②": "대체키",
      "③": "슈퍼키",
      "④": "외래키"
    },
    "정답": "③"
  },
  {
    "번호": 56,
    "문제": "물리적 데이터베이스 설계에 대한 설명으로 거리가 먼 것은?",
    "선택지": {
      "①": "물리적 설계의 목적은 효율적인 방법으로 데이터를 저장하는 것이다.",
      "②": "트랜잭션 처리량과 응답시간, 디스크 용량 등을 고려해야 한다.",
      "③": "저장 레코드의 형식, 순서, 접근 경로와 같은 정보를 사용하여 설계한다.",
      "④": "트랜잭션의 인터페이스를 설계하며 데이터 타입 및 데이터 타입들 간의 관계로 표현한다."
    },
    "정답": "④"
  },
  {
    "번호": 57,
    "문제": "관계해석에서 '모든 것에 대하여'의 의미를 나타내는 논리 기호는?",
    "선택지": {
      "①": "∃",
      "②": "∈",
      "③": "∀",
      "④": "⊂"
    },
    "정답": "③"
  },
  {
    "번호": 58,
    "문제": "다음 SQL 문에서 빈칸에 들어갈 내용으로 옳은 것은?\n\nSELECT 이름 FROM 직원 WHERE 팀코드 = (SELECT 팀코드 FROM 직원 WHERE 이름 = '정도일');",
    "선택지": {
      "①": "WHERE 이름 = '정도일'",
      "②": "SELECT 팀코드 FROM 직원 WHERE 이름 = '정도일'",
      "③": "WHERE 직원 = '정도일'",
      "④": "SELECT 직원 FROM 팀코드 WHERE 이름 = '정도일'"
    },
    "정답": "②"
  },
  {
    "번호": 59,
    "문제": "데이터베이스에 영향을 주는 생성, 읽기, 갱신, 삭제 연산으로 프로세스와 테이블 간에 매트릭스를 만들어서 트랜잭션을 분석하는 것은?",
    "선택지": {
      "①": "CASE 분석",
      "②": "일치 분석",
      "③": "CRUD 분석",
      "④": "연관성 분석"
    },
    "정답": "③"
  },
  {
    "번호": 60,
    "문제": "데이터베이스에는 관계형, 계층형, 네트워크형 등 다양한 종류가 있는데 이들을 구분하는 기준은?",
    "선택지": {
      "①": "개체(Object)",
      "②": "관계(Relationship)",
      "③": "속성(Attribute)",
      "④": "제약 조건(Constraint)"
    },
    "정답": "②"
  },
  {
    "번호": 61,
    "문제": "데이터베이스 설계 단계에서 논리적 설계 단계에서 수행하는 작업이 아닌 것은?",
    "선택지": {
      "①": "테이블 설계 및 정규화 수행",
      "②": "트랜잭션 인터페이스 설계",
      "③": "데이터베이스의 논리적 구조 설계",
      "④": "물리적 저장 구조 및 접근 경로 설계"
    },
    "정답": "④"
  },
  {
    "번호": 62,
    "문제": "관계형 데이터베이스의 관계 연산자 중 세타 조인(θ-join)에 대한 설명으로 옳은 것은?",
    "선택지": {
      "①": "자기 자신과의 조인을 수행하는 방법",
      "②": "관계 간에 동일한 속성을 기준으로 자연 조인을 수행하는 방법",
      "③": "관계 간에 특정 연산자를 이용하여 조건을 만족하는 튜플을 조인하는 방법",
      "④": "관계 간의 모든 튜플을 조합하여 만드는 방법"
    },
    "정답": "③"
  },
  {
    "번호": 63,
    "문제": "트랜잭션의 특성 중 '영속성(Durability)'에 대한 설명으로 올바른 것은?",
    "선택지": {
      "①": "트랜잭션이 실행되면 반드시 완료되어야 한다.",
      "②": "트랜잭션 실행 중 오류가 발생하면 이전 상태로 복구된다.",
      "③": "트랜잭션이 성공적으로 완료되면 결과가 데이터베이스에 영구적으로 저장된다.",
      "④": "하나의 트랜잭션 실행 중 다른 트랜잭션이 간섭할 수 없다."
    },
    "정답": "③"
  },
  {
    "번호": 64,
    "문제": "다음 중 정규화(Normalization)의 목적이 아닌 것은?",
    "선택지": {
      "①": "데이터의 중복을 최소화",
      "②": "데이터의 무결성을 유지",
      "③": "데이터의 일관성을 증가",
      "④": "데이터의 검색 속도를 감소"
    },
    "정답": "④"
  },
  {
    "번호": 65,
    "문제": "트랜잭션의 장애 복구 기법 중 체크포인트(Checkpoint) 기법의 설명으로 틀린 것은?",
    "선택지": {
      "①": "데이터베이스의 로그를 일정 간격으로 저장하는 기법이다.",
      "②": "트랜잭션이 정상적으로 수행되었는지 확인하는 기준점을 제공한다.",
      "③": "장애 발생 시 체크포인트 이후의 로그만 이용하여 복구할 수 있다.",
      "④": "체크포인트는 모든 트랜잭션을 강제로 종료하는 역할을 한다."
    },
    "정답": "④"
  },
  {
    "번호": 66,
    "문제": "다음 SQL 명령어 중 트랜잭션을 종료하는 명령어는?",
    "선택지": {
      "①": "ROLLBACK",
      "②": "SAVEPOINT",
      "③": "COMMIT",
      "④": "GRANT"
    },
    "정답": "③"
  },
  {
    "번호": 67,
    "문제": "데이터베이스 설계 시 물리적 설계 단계에서 고려해야 할 요소가 아닌 것은?",
    "선택지": {
      "①": "파일의 저장 구조",
      "②": "테이블의 정규화",
      "③": "인덱스의 설계",
      "④": "트랜잭션 처리 성능"
    },
    "정답": "②"
  },
  {
    "번호": 68,
    "문제": "다음 중 무결성 제약 조건에 해당하지 않는 것은?",
    "선택지": {
      "①": "개체 무결성(Entity Integrity)",
      "②": "참조 무결성(Referential Integrity)",
      "③": "연산 무결성(Operation Integrity)",
      "④": "도메인 무결성(Domain Integrity)"
    },
    "정답": "③"
  },
  {
    "번호": 69,
    "문제": "트랜잭션에서 두 개 이상의 트랜잭션이 동일한 데이터에 대해 동시 접근하여 발생할 수 있는 문제점이 아닌 것은?",
    "선택지": {
      "①": "갱신 손실 문제",
      "②": "비완료 의존성 문제",
      "③": "모순성 문제",
      "④": "정합성 문제"
    },
    "정답": "④"
  },
  {
    "번호": 70,
    "문제": "데이터베이스 설계에서 개념적 설계 단계에서 주로 사용되는 모델은?",
    "선택지": {
      "①": "ER 모델",
      "②": "릴레이션 모델",
      "③": "네트워크 모델",
      "④": "계층 모델"
    },
    "정답": "①"
  },
  {
    "번호": 71,
    "문제": "데이터베이스 트랜잭션에서 발생할 수 있는 문제점 중 '비완료 의존성 문제'에 대한 설명으로 옳은 것은?",
    "선택지": {
      "①": "두 개 이상의 트랜잭션이 동일한 데이터를 갱신할 때 하나의 갱신이 다른 갱신을 덮어씌우는 문제",
      "②": "하나의 트랜잭션이 갱신한 데이터를 다른 트랜잭션이 참조한 후, 첫 번째 트랜잭션이 롤백될 경우 발생하는 문제",
      "③": "트랜잭션 실행 순서에 따라 결과가 달라지는 문제",
      "④": "트랜잭션이 정상적으로 수행되었음에도 불구하고 불완전한 상태로 종료되는 문제"
    },
    "정답": "②"
  },
  {
    "번호": 72,
    "문제": "이상(Anomaly) 현상에 대한 설명으로 틀린 것은?",
    "선택지": {
      "①": "삭제 이상은 불필요한 데이터까지 함께 삭제되는 현상이다.",
      "②": "삽입 이상은 특정 데이터를 삽입하려 할 때 불필요한 데이터도 함께 삽입해야 하는 현상이다.",
      "③": "갱신 이상은 중복된 데이터 중 일부만 수정되어 데이터 불일치가 발생하는 현상이다.",
      "④": "이상 현상은 모든 정규형에서 발생한다."
    },
    "정답": "④"
  },
  {
    "번호": 73,
    "문제": "관계형 데이터 모델에서 키(Key)의 특징으로 옳지 않은 것은?",
    "선택지": {
      "①": "후보키는 유일성과 최소성을 만족하는 키이다.",
      "②": "슈퍼키는 유일성을 만족하지만 최소성을 만족하지 않는 키일 수도 있다.",
      "③": "기본키는 후보키 중 선택된 하나의 키이다.",
      "④": "외래키는 한 테이블에서 후보키가 될 수 없다."
    },
    "정답": "④"
  },
  {
    "번호": 74,
    "문제": "트랜잭션이 실행될 때 하나의 연산이 완료되지 않았는데도 다른 트랜잭션에서 해당 연산의 데이터를 읽을 수 있는 현상은?",
    "선택지": {
      "①": "Dirty Read",
      "②": "Non-Repeatable Read",
      "③": "Phantom Read",
      "④": "Lost Update"
    },
    "정답": "①"
  },
  {
    "번호": 75,
    "문제": "데이터베이스의 개념적 설계 단계에서 수행하는 작업이 아닌 것은?",
    "선택지": {
      "①": "ER 다이어그램을 작성한다.",
      "②": "속성과 관계를 정의한다.",
      "③": "테이블의 인덱스를 설계한다.",
      "④": "주요 개체를 식별한다."
    },
    "정답": "③"
  },
  {
    "번호": 76,
    "문제": "다음 SQL 문이 수행하는 기능으로 옳은 것은?\n\n```sql\nSELECT 고객명, COUNT(*) FROM 주문\nGROUP BY 고객명\nHAVING COUNT(*) > 3;\n```",
    "선택지": {
      "①": "주문 테이블에서 고객별 주문 횟수를 조회한다.",
      "②": "주문 테이블에서 주문 횟수가 3회 이하인 고객을 조회한다.",
      "③": "주문 테이블에서 3회 이상 주문한 고객명을 조회한다.",
      "④": "주문 테이블에서 고객명을 기준으로 정렬하여 출력한다."
    },
    "정답": "③"
  },
  {
    "번호": 77,
    "문제": "데이터베이스에서 동시성 제어를 위해 사용하는 기법이 아닌 것은?",
    "선택지": {
      "①": "로킹 기법",
      "②": "타임스탬프 기법",
      "③": "다중 버전 동시성 제어",
      "④": "클러스터링 기법"
    },
    "정답": "④"
  },
  {
    "번호": 78,
    "문제": "SQL에서 하나의 테이블을 기준으로 또 다른 테이블을 조인하여 데이터를 조회하는 기법으로, 같은 테이블 내에서도 수행할 수 있는 것은?",
    "선택지": {
      "①": "Inner Join",
      "②": "Outer Join",
      "③": "Self Join",
      "④": "Cross Join"
    },
    "정답": "③"
  },
  {
    "번호": 79,
    "문제": "다음 중 제1 정규형(1NF)의 특징이 아닌 것은?",
    "선택지": {
      "①": "모든 속성이 원자값을 가져야 한다.",
      "②": "기본키를 설정해야 한다.",
      "③": "중복된 데이터를 허용해야 한다.",
      "④": "반복되는 속성을 제거해야 한다."
    },
    "정답": "③"
  },
  {
    "번호": 80,
    "문제": "데이터베이스 설계 시 사용자의 관점에서 데이터의 논리적 구조를 정의하는 과정은?",
    "선택지": {
      "①": "개념적 설계",
      "②": "논리적 설계",
      "③": "물리적 설계",
      "④": "데이터 모델링"
    },
    "정답": "②"
  },
  {
    "번호": 81,
    "문제": "다음 중 SQL에서 데이터를 조작하는 명령어(DML)에 속하는 것은?",
    "선택지": {
      "①": "CREATE",
      "②": "DELETE",
      "③": "GRANT",
      "④": "ALTER"
    },
    "정답": "②"
  },
  {
    "번호": 82,
    "문제": "SQL의 JOIN 중에서 한 테이블의 모든 행과 다른 테이블의 모든 행을 조합하여 출력하는 것은?",
    "선택지": {
      "①": "INNER JOIN",
      "②": "OUTER JOIN",
      "③": "CROSS JOIN",
      "④": "SELF JOIN"
    },
    "정답": "③"
  },
  {
    "번호": 83,
    "문제": "데이터베이스 트랜잭션 특성 중 원자성(Atomicity)에 대한 설명으로 옳은 것은?",
    "선택지": {
      "①": "트랜잭션이 성공적으로 완료되면 결과가 데이터베이스에 영구적으로 저장된다.",
      "②": "트랜잭션이 실행되는 동안 다른 트랜잭션이 끼어들 수 없다.",
      "③": "트랜잭션의 연산이 모두 반영되거나 전혀 반영되지 않아야 한다.",
      "④": "데이터베이스는 트랜잭션 실행 후 항상 일관된 상태를 유지해야 한다."
    },
    "정답": "③"
  },
  {
    "번호": 84,
    "문제": "다음 중 외래키(Foreign Key)에 대한 설명으로 옳지 않은 것은?",
    "선택지": {
      "①": "한 테이블의 속성이 다른 테이블의 기본키를 참조할 수 있다.",
      "②": "외래키는 NULL 값을 가질 수 없다.",
      "③": "참조 무결성을 유지하기 위해 사용된다.",
      "④": "외래키 제약 조건을 설정하면 데이터의 무결성을 보장할 수 있다."
    },
    "정답": "②"
  },
  {
    "번호": 85,
    "문제": "다음 중 데이터베이스의 정규화 과정에서 발생하는 장점이 아닌 것은?",
    "선택지": {
      "①": "데이터 중복을 최소화할 수 있다.",
      "②": "데이터의 무결성을 유지할 수 있다.",
      "③": "데이터 검색 속도가 감소할 수 있다.",
      "④": "테이블의 구조를 단순화할 수 있다."
    },
    "정답": "③"
  },
  {
    "번호": 86,
    "문제": "다음 중 데이터베이스의 개념적 설계 단계에서 수행하는 작업이 아닌 것은?",
    "선택지": {
      "①": "ER 다이어그램 작성",
      "②": "테이블의 인덱스 설계",
      "③": "속성과 관계 정의",
      "④": "주요 개체 식별"
    },
    "정답": "②"
  },
  {
    "번호": 87,
    "문제": "다음 중 관계 대수(Relational Algebra)의 연산에 해당하지 않는 것은?",
    "선택지": {
      "①": "Selection(σ)",
      "②": "Projection(π)",
      "③": "Join(⨝)",
      "④": "Summation(Σ)"
    },
    "정답": "④"
  },
  {
    "번호": 88,
    "문제": "다음 중 2단계 로킹(Two-Phase Locking, 2PL)에 대한 설명으로 옳은 것은?",
    "선택지": {
      "①": "모든 트랜잭션이 한 번에 여러 개의 락을 획득할 수 있다.",
      "②": "트랜잭션이 락을 해제한 후에는 새로운 락을 획득할 수 있다.",
      "③": "트랜잭션이 실행되는 동안 락을 획득하는 단계와 해제하는 단계가 명확히 구분된다.",
      "④": "2단계 로킹을 사용하면 교착 상태(Deadlock)를 완벽하게 방지할 수 있다."
    },
    "정답": "③"
  },
  {
    "번호": 89,
    "문제": "다음 중 트랜잭션의 상태 중 하나가 아닌 것은?",
    "선택지": {
      "①": "활성(Active)",
      "②": "실패(Failed)",
      "③": "종료(End)",
      "④": "부분 완료(Partially Committed)"
    },
    "정답": "③"
  },
  {
    "번호": 90,
    "문제": "SQL에서 특정 열의 중복 값을 제거하여 조회하는 데 사용되는 키워드는?",
    "선택지": {
      "①": "DISTINCT",
      "②": "ORDER BY",
      "③": "GROUP BY",
      "④": "HAVING"
    },
    "정답": "①"
  },
  {
    "번호": 91,
    "문제": "다음 중 데이터베이스 설계에서 개념적 설계 단계에서 수행하는 작업이 아닌 것은?",
    "선택지": {
      "①": "ER 다이어그램 작성",
      "②": "속성과 관계 정의",
      "③": "테이블의 물리적 저장 구조 설계",
      "④": "주요 개체 식별"
    },
    "정답": "③"
  },
  {
    "번호": 92,
    "문제": "다음 중 정규화(Normalization)의 목적이 아닌 것은?",
    "선택지": {
      "①": "데이터 중복을 최소화한다.",
      "②": "데이터 무결성을 유지한다.",
      "③": "검색 성능을 저하시키는 것에 초점을 둔다.",
      "④": "데이터의 일관성을 증가시킨다."
    },
    "정답": "③"
  },
  {
    "번호": 93,
    "문제": "다음 중 관계형 데이터베이스에서 조인(Join) 연산의 종류가 아닌 것은?",
    "선택지": {
      "①": "Inner Join",
      "②": "Outer Join",
      "③": "Cartesian Join",
      "④": "Self Join"
    },
    "정답": "③"
  },
  {
    "번호": 94,
    "문제": "데이터베이스에서 트랜잭션을 관리하기 위한 COMMIT 명령어의 역할로 올바른 것은?",
    "선택지": {
      "①": "트랜잭션의 모든 변경 사항을 영구적으로 저장한다.",
      "②": "트랜잭션의 변경 사항을 취소하고 이전 상태로 되돌린다.",
      "③": "테이블의 구조를 변경한다.",
      "④": "데이터베이스 사용자에게 특정 권한을 부여한다."
    },
    "정답": "①"
  },
  {
    "번호": 95,
    "문제": "다음 중 SQL의 WHERE 절에서 사용될 수 없는 연산자는?",
    "선택지": {
      "①": "LIKE",
      "②": "BETWEEN",
      "③": "ORDER BY",
      "④": "IN"
    },
    "정답": "③"
  },
  {
    "번호": 96,
    "문제": "다음 중 SQL에서 그룹화된 데이터에 대한 조건을 적용하는 데 사용하는 절은?",
    "선택지": {
      "①": "WHERE",
      "②": "HAVING",
      "③": "GROUP BY",
      "④": "ORDER BY"
    },
    "정답": "②"
  },
  {
    "번호": 97,
    "문제": "다음 중 SQL에서 NULL 값을 처리하는 함수는?",
    "선택지": {
      "①": "NVL",
      "②": "LENGTH",
      "③": "SUBSTR",
      "④": "ROUND"
    },
    "정답": "①"
  },
  {
    "번호": 98,
    "문제": "다음 중 데이터베이스 무결성을 보장하기 위한 기법이 아닌 것은?",
    "선택지": {
      "①": "개체 무결성(Entity Integrity)",
      "②": "참조 무결성(Referential Integrity)",
      "③": "도메인 무결성(Domain Integrity)",
      "④": "가상 무결성(Virtual Integrity)"
    },
    "정답": "④"
  },
  {
    "번호": 99,
    "문제": "다음 중 데이터베이스의 인덱스(Index)에 대한 설명으로 올바르지 않은 것은?",
    "선택지": {
      "①": "검색 성능을 향상시키는 데 사용된다.",
      "②": "모든 테이블에 반드시 하나 이상의 인덱스를 생성해야 한다.",
      "③": "쿼리 실행 속도를 향상시키지만 삽입, 삭제 성능에 영향을 줄 수 있다.",
      "④": "인덱스는 특정 컬럼에 대해 정렬된 정보를 유지한다."
    },
    "정답": "②"
  },
  {
    "번호": 100,
    "문제": "다음 중 관계형 데이터베이스에서 트랜잭션의 원자성(Atomicity)을 보장하기 위해 사용되는 기법은?",
    "선택지": {
      "①": "로그(Log) 관리",
      "②": "인덱스(Index) 관리",
      "③": "정규화(Normalization)",
      "④": "클러스터링(Clustering)"
    },
    "정답": "①"
  }
]